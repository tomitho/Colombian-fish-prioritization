getwd()
DIR <- "C:/Users/ttomiczek/Desktop/projects/Publication/"
if (!require("raster")) { install.packages("raster", dependencies = TRUE) ; library(raster)}
if (!require("rgdal")) { install.packages("rgdal", dependencies = TRUE) ; library(rgdal)}
basin <- raster(paste0(DIR, "subbasins_90.tif"))
basin_subset <- crop(basin, extent(-81.3, -59.3083333, -12.05, 12.4333333))
raster::writeRaster(basin_subset, paste0(DIR, "study_basin.tif"))
basin_subset <- crop(basin, extent(-81.3, -55.3083333, -12.05, 12.4333333))
raster::writeRaster(basin_subset, paste0(DIR, "study_basin.tif"))
raster::writeRaster(basin_subset, paste0(DIR, "study_basin.tif"), overwrite = TRUE)
# study area
basin_subset <- crop(basin, extent(-81.73828, -66.48926, -4.66184, 12.4333333))
raster::writeRaster(basin_subset, paste0(DIR, "study_basin.tif"), overwrite = TRUE)
# study area
basin_subset <- crop(basin, extent(-81.73828, -66.48926, -4.66184, 12.4333333))
raster::writeRaster(basin_subset, paste0(DIR, "study_basin.tif"), overwrite = TRUE)
basin_ID <- unique(basin_subset)
indx = which(!(basin[] %in% basin_ID))
basin[indx] = NA
# basin_crop <- trim(basin,
#                values= NA)
# indx <- which(basin[] %in% basin_ID)
# basins <- basin[indx]
basins <-raster::trim(basin,
values= NA)
raster::writeRaster(basin_subset, paste0(DIR, "study_crop_basin.tif"), overwrite = TRUE)
x11(); plot(basins)
raster::writeRaster(basins, paste0(DIR, "study_crop_basin.tif"), overwrite = TRUE)
basin_id <- as.data.frame(basins)
basin_id <- na.omit(basin_id)
basin_id <- as.data.frame(basin_id[!duplicated(basin_id$subbasins_90),])
basin_id <- as.data.frame(basins)
basin_id <- na.omit(basin_id)
basin_id <- as.data.frame(basin_id[!duplicated(basin_id$subbasins_90),])
colnames(basin_id) <- "basin_id"
bas_dat <- basin_id
bas_dat$basins <- basin_id$basin_id
bas_dat$amount <- 1
study_area <- reclassify(basin, bas_dat, right = NA)
raster::writeRaster(study_area, paste0(DIR, "study_crop_basin.tif"), overwrite = TRUE)
library(terra) # For raster handling and vectorization
library(sf)    # For spatial vector manipulation (dissolving)
# Vectorize the raster, converting it to polygons
vectorized <- as.polygons(study_area)
study_area <- terra::rast(study_area)
# Vectorize the raster, converting it to polygons
vectorized <- as.polygons(study_area)
# Convert to `sf` object
vector_sf <- st_as_sf(vectorized)
# Optional: Check available attribute fields
names(vector_sf)
# Dissolve polygons by a specific attribute
# Replace "attribute_field" with the actual field name (e.g., "value" for pixel values)
dissolved <- vector_sf %>%
group_by(attribute_field) %>%
summarize(geometry = st_union(geometry))
library(dplyr)
# Dissolve polygons by a specific attribute
# Replace "attribute_field" with the actual field name (e.g., "value" for pixel values)
dissolved <- vector_sf %>%
group_by(attribute_field) %>%
summarize(geometry = st_union(geometry))
# Optional: Check available attribute fields
names(vector_sf)
# Dissolve polygons by a specific attribute
# Replace "attribute_field" with the actual field name (e.g., "value" for pixel values)
dissolved <- vector_sf %>%
group_by(subbasins_90) %>%
summarize(geometry = st_union(geometry))
# Save the dissolved vector as a shapefile or GeoPackage
st_write(dissolved, paste0(DIR, "study_crop_basin.shp"))  # Shapefile
